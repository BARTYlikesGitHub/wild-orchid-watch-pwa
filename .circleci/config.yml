version: 2.1

executors:
  default-executor:
    docker:
      - image: cypress/base:10

jobs:
  install-dependencies:
    executor: default-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-deps-{{ checksum "yarn.lock" }}
            - v2-deps

      - run:
          name: 'Install dependencies'
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v2-deps-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths: .

  check-prettier:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Run prettier check on project files'
          command: yarn prettier:check

  check-linter:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Run linter'
          command: yarn lint

  run-unit-tests:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Run unit tests'
          command: yarn test:unit

  run-e2e-tests:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-deps-{{ checksum "yarn.lock" }}
            - v2-deps
      - run:
          name: 'Run e2e tests'
          command: echo "FIXME get working"
          # command: yarn test:e2e:headless

  build-prod:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Write env var overrides'
          # we need to escape (\) the << otherwise CircleCI complains
          command: |
            theFile=.env.local
            cat \<<EOF > $theFile
            VUE_APP_INAT_BASE_URL=${PROD_INAT_BASE_URL:?}
            VUE_APP_INAT_STATIC_BASE_URL=${PROD_INAT_STATIC_BASE_URL:?}
            VUE_APP_API_BASE_URL=${PROD_API_BASE_URL:?}
            VUE_APP_OAUTH_APP_ID=${PROD_OAUTH_APP_ID:?}
            VUE_APP_OAUTH_REDIRECT_URI=${PROD_OAUTH_REDIRECT_URI:?}
            VUE_APP_INAT_PROJECT_SLUG=${PROD_INAT_PROJECT_SLUG:?}
            VUE_APP_TARGET_TAXA_ID=${PROD_TARGET_TAXA_ID:?}
            VUE_APP_OBS_FIELD_IDS_COARSE_FRAGMENTS=${PROD_OBS_FIELD_IDS_COARSE_FRAGMENTS:?}
            VUE_APP_OBS_FIELD_IDS_EVIDENCE_THREATS=${PROD_OBS_FIELD_IDS_EVIDENCE_THREATS:?}
            VUE_APP_OBS_FIELD_IDS_FLORAL_VISITORS=${PROD_OBS_FIELD_IDS_FLORAL_VISITORS:?}
            VUE_APP_OBS_FIELD_IDS_IMMEDIATE_LANDUSE=${PROD_OBS_FIELD_IDS_IMMEDIATE_LANDUSE:?}
            VUE_APP_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT=${PROD_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT:?}
            VUE_APP_OBS_FIELD_IDS_PHENOLOGY=${PROD_OBS_FIELD_IDS_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_IDS_WIDE_SELECTS=${PROD_OBS_FIELD_IDS_WIDE_SELECTS:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT=${PROD_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC=${PROD_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC:?}
            VUE_APP_OBS_FIELD_ID_AREA_OF_POPULATION=${PROD_OBS_FIELD_ID_AREA_OF_POPULATION:?}
            VUE_APP_OBS_FIELD_ID_AREA_SEARCHED=${PROD_OBS_FIELD_ID_AREA_SEARCHED:?}
            VUE_APP_OBS_FIELD_ID_COMMUNITY_NOTES=${PROD_OBS_FIELD_ID_COMMUNITY_NOTES:?}
            VUE_APP_OBS_FIELD_ID_COUNT=${PROD_OBS_FIELD_ID_COUNT:?}
            VUE_APP_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM=${PROD_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_PHENOLOGY=${PROD_OBS_FIELD_ID_DOMINANT_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_VEG=${PROD_OBS_FIELD_ID_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_EPIPHYTE_HEIGHT=${PROD_OBS_FIELD_ID_EPIPHYTE_HEIGHT:?}
            VUE_APP_OBS_FIELD_ID_FLORIVORY_DAMAGE=${PROD_OBS_FIELD_ID_FLORIVORY_DAMAGE:?}
            VUE_APP_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG=${PROD_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_HOST_TREE=${PROD_OBS_FIELD_ID_HOST_TREE:?}
            VUE_APP_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION=${PROD_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION:?}
            VUE_APP_OBS_FIELD_ID_LANDFORM_TYPE=${PROD_OBS_FIELD_ID_LANDFORM_TYPE:?}
            VUE_APP_OBS_FIELD_ID_LITTER=${PROD_OBS_FIELD_ID_LITTER:?}
            VUE_APP_OBS_FIELD_ID_ORCHID_TYPE=${PROD_OBS_FIELD_ID_ORCHID_TYPE:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH=${PROD_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH=${PROD_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_EFFORT=${PROD_OBS_FIELD_ID_SEARCH_EFFORT:?}
            VUE_APP_OBS_FIELD_ID_SOIL_STRUCTURE=${PROD_OBS_FIELD_ID_SOIL_STRUCTURE:?}
            VUE_APP_OBS_FIELD_ID_WIDER_LANDUSE=${PROD_OBS_FIELD_ID_WIDER_LANDUSE:?}
            VUE_APP_GA_CODE=${PROD_GA_CODE:?}
            VUE_APP_DEPLOYED_ENV_NAME=production
            VUE_APP_GMAPS_API_KEY=${GMAPS_API_KEY:?}
            VUE_APP_SENTRY_DSN=${SENTRY_DSN:?}
            # optional items
            VUE_APP_BBOX_LAT_MIN=$PROD_BBOX_LAT_MIN
            VUE_APP_BBOX_LAT_MAX=$PROD_BBOX_LAT_MAX
            VUE_APP_BBOX_LON_MIN=$PROD_BBOX_LON_MIN
            VUE_APP_BBOX_LON_MAX=$PROD_BBOX_LON_MAX
            EOF
            # now some optional items
            [ ! -z $PROD_OBS_FIELD_DEFAULT_ACCURACY ] && {
              echo "VUE_APP_OBS_FIELD_DEFAULT_ACCURACY=$PROD_OBS_FIELD_DEFAULT_ACCURACY" >> $theFile
            }
            [ ! -z $PROD_OBS_FIELD_ORCHID_TYPE_EPIPHYTE ] && {
              echo "VUE_APP_OBS_FIELD_ORCHID_TYPE_EPIPHYTE=$PROD_OBS_FIELD_ORCHID_TYPE_EPIPHYTE" >> $theFile
            }
            echo "[INFO] contents of $theFile"
            cat $theFile
      - run:
          name: 'Build prod'
          command: |
            export VUE_APP_DEPLOYED_ENV_NAME=production
            ./scripts/build-and-sentry-release.sh
      - persist_to_workspace: # FIXME only need dist/ right?
          root: .
          paths: .

  build-beta:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Write env var overrides'
          # we need to escape (\) the << otherwise CircleCI complains
          command: |
            theFile=.env.local
            cat \<<EOF > $theFile
            VUE_APP_INAT_BASE_URL=${BETA_INAT_BASE_URL:?}
            VUE_APP_INAT_STATIC_BASE_URL=${BETA_INAT_STATIC_BASE_URL:?}
            VUE_APP_API_BASE_URL=${BETA_API_BASE_URL:?}
            VUE_APP_OAUTH_APP_ID=${BETA_OAUTH_APP_ID:?}
            VUE_APP_OAUTH_REDIRECT_URI=${BETA_OAUTH_REDIRECT_URI:?}
            VUE_APP_INAT_PROJECT_SLUG=${BETA_INAT_PROJECT_SLUG:?}
            VUE_APP_TARGET_TAXA_ID=${BETA_TARGET_TAXA_ID:?}
            VUE_APP_OBS_FIELD_IDS_COARSE_FRAGMENTS=${BETA_OBS_FIELD_IDS_COARSE_FRAGMENTS:?}
            VUE_APP_OBS_FIELD_IDS_EVIDENCE_THREATS=${BETA_OBS_FIELD_IDS_EVIDENCE_THREATS:?}
            VUE_APP_OBS_FIELD_IDS_FLORAL_VISITORS=${BETA_OBS_FIELD_IDS_FLORAL_VISITORS:?}
            VUE_APP_OBS_FIELD_IDS_IMMEDIATE_LANDUSE=${BETA_OBS_FIELD_IDS_IMMEDIATE_LANDUSE:?}
            VUE_APP_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT=${BETA_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT:?}
            VUE_APP_OBS_FIELD_IDS_PHENOLOGY=${BETA_OBS_FIELD_IDS_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_IDS_WIDE_SELECTS=${BETA_OBS_FIELD_IDS_WIDE_SELECTS:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT=${BETA_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC=${BETA_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC:?}
            VUE_APP_OBS_FIELD_ID_AREA_OF_POPULATION=${BETA_OBS_FIELD_ID_AREA_OF_POPULATION:?}
            VUE_APP_OBS_FIELD_ID_AREA_SEARCHED=${BETA_OBS_FIELD_ID_AREA_SEARCHED:?}
            VUE_APP_OBS_FIELD_ID_COMMUNITY_NOTES=${BETA_OBS_FIELD_ID_COMMUNITY_NOTES:?}
            VUE_APP_OBS_FIELD_ID_COUNT=${BETA_OBS_FIELD_ID_COUNT:?}
            VUE_APP_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM=${BETA_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_PHENOLOGY=${BETA_OBS_FIELD_ID_DOMINANT_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_VEG=${BETA_OBS_FIELD_ID_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_EPIPHYTE_HEIGHT=${BETA_OBS_FIELD_ID_EPIPHYTE_HEIGHT:?}
            VUE_APP_OBS_FIELD_ID_FLORIVORY_DAMAGE=${BETA_OBS_FIELD_ID_FLORIVORY_DAMAGE:?}
            VUE_APP_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG=${BETA_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_HOST_TREE=${BETA_OBS_FIELD_ID_HOST_TREE:?}
            VUE_APP_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION=${BETA_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION:?}
            VUE_APP_OBS_FIELD_ID_LANDFORM_TYPE=${BETA_OBS_FIELD_ID_LANDFORM_TYPE:?}
            VUE_APP_OBS_FIELD_ID_LITTER=${BETA_OBS_FIELD_ID_LITTER:?}
            VUE_APP_OBS_FIELD_ID_ORCHID_TYPE=${BETA_OBS_FIELD_ID_ORCHID_TYPE:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH=${BETA_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH=${BETA_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_EFFORT=${BETA_OBS_FIELD_ID_SEARCH_EFFORT:?}
            VUE_APP_OBS_FIELD_ID_SOIL_STRUCTURE=${BETA_OBS_FIELD_ID_SOIL_STRUCTURE:?}
            VUE_APP_OBS_FIELD_ID_WIDER_LANDUSE=${BETA_OBS_FIELD_ID_WIDER_LANDUSE:?}
            VUE_APP_GA_CODE=${BETA_GA_CODE:?}
            VUE_APP_DEPLOYED_ENV_NAME=beta
            VUE_APP_GMAPS_API_KEY=${GMAPS_API_KEY:?}
            VUE_APP_SENTRY_DSN=${SENTRY_DSN:?}
            # optional items
            VUE_APP_BBOX_LAT_MIN=$BETA_BBOX_LAT_MIN
            VUE_APP_BBOX_LAT_MAX=$BETA_BBOX_LAT_MAX
            VUE_APP_BBOX_LON_MIN=$BETA_BBOX_LON_MIN
            VUE_APP_BBOX_LON_MAX=$BETA_BBOX_LON_MAX
            EOF
            # now some optional items
            [ ! -z $BETA_OBS_FIELD_DEFAULT_ACCURACY ] && {
              echo "VUE_APP_OBS_FIELD_DEFAULT_ACCURACY=$BETA_OBS_FIELD_DEFAULT_ACCURACY" >> $theFile
            }
            [ ! -z $BETA_OBS_FIELD_ORCHID_TYPE_EPIPHYTE ] && {
              echo "VUE_APP_OBS_FIELD_ORCHID_TYPE_EPIPHYTE=$BETA_OBS_FIELD_ORCHID_TYPE_EPIPHYTE" >> $theFile
            }
            echo "[INFO] contents of $theFile"
            cat $theFile
      - run:
          name: 'Build beta'
          command: |
            export VUE_APP_DEPLOYED_ENV_NAME=beta
            ./scripts/build-and-sentry-release.sh
      - persist_to_workspace: # FIXME only need dist/ right?
          root: .
          paths: .

  build-dev:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Write env var overrides'
          # we need to escape (\) the << otherwise CircleCI complains
          command: |
            theFile=.env.local
            cat \<<EOF > $theFile
            VUE_APP_INAT_BASE_URL=${DEV_INAT_BASE_URL:?}
            VUE_APP_INAT_STATIC_BASE_URL=${DEV_INAT_STATIC_BASE_URL:?}
            VUE_APP_API_BASE_URL=${DEV_API_BASE_URL:?}
            VUE_APP_OAUTH_APP_ID=${DEV_OAUTH_APP_ID:?}
            VUE_APP_OAUTH_REDIRECT_URI=${DEV_OAUTH_REDIRECT_URI:?}
            VUE_APP_INAT_PROJECT_SLUG=${DEV_INAT_PROJECT_SLUG:?}
            VUE_APP_TARGET_TAXA_ID=${DEV_TARGET_TAXA_ID:?}
            VUE_APP_OBS_FIELD_IDS_COARSE_FRAGMENTS=${DEV_OBS_FIELD_IDS_COARSE_FRAGMENTS:?}
            VUE_APP_OBS_FIELD_IDS_EVIDENCE_THREATS=${DEV_OBS_FIELD_IDS_EVIDENCE_THREATS:?}
            VUE_APP_OBS_FIELD_IDS_FLORAL_VISITORS=${DEV_OBS_FIELD_IDS_FLORAL_VISITORS:?}
            VUE_APP_OBS_FIELD_IDS_IMMEDIATE_LANDUSE=${DEV_OBS_FIELD_IDS_IMMEDIATE_LANDUSE:?}
            VUE_APP_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT=${DEV_OBS_FIELD_IDS_MUTUALLY_EXCLUSIVE_MULTISELECT:?}
            VUE_APP_OBS_FIELD_IDS_PHENOLOGY=${DEV_OBS_FIELD_IDS_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_IDS_WIDE_SELECTS=${DEV_OBS_FIELD_IDS_WIDE_SELECTS:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT=${DEV_OBS_FIELD_ID_ACCURACY_OF_POPULATION_COUNT:?}
            VUE_APP_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC=${DEV_OBS_FIELD_ID_ACCURACY_OF_SEARCH_AREA_CALC:?}
            VUE_APP_OBS_FIELD_ID_AREA_OF_POPULATION=${DEV_OBS_FIELD_ID_AREA_OF_POPULATION:?}
            VUE_APP_OBS_FIELD_ID_AREA_SEARCHED=${DEV_OBS_FIELD_ID_AREA_SEARCHED:?}
            VUE_APP_OBS_FIELD_ID_COMMUNITY_NOTES=${DEV_OBS_FIELD_ID_COMMUNITY_NOTES:?}
            VUE_APP_OBS_FIELD_ID_COUNT=${DEV_OBS_FIELD_ID_COUNT:?}
            VUE_APP_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM=${DEV_OBS_FIELD_ID_COVER_OF_DOMINANT_STRATUM:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_PHENOLOGY=${DEV_OBS_FIELD_ID_DOMINANT_PHENOLOGY:?}
            VUE_APP_OBS_FIELD_ID_DOMINANT_VEG=${DEV_OBS_FIELD_ID_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_EPIPHYTE_HEIGHT=${DEV_OBS_FIELD_ID_EPIPHYTE_HEIGHT:?}
            VUE_APP_OBS_FIELD_ID_FLORIVORY_DAMAGE=${DEV_OBS_FIELD_ID_FLORIVORY_DAMAGE:?}
            VUE_APP_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG=${DEV_OBS_FIELD_ID_HEIGHT_OF_DOMINANT_VEG:?}
            VUE_APP_OBS_FIELD_ID_HOST_TREE=${DEV_OBS_FIELD_ID_HOST_TREE:?}
            VUE_APP_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION=${DEV_OBS_FIELD_ID_IMMEDIATE_LANDUSE_CONSERVATION:?}
            VUE_APP_OBS_FIELD_ID_LANDFORM_TYPE=${DEV_OBS_FIELD_ID_LANDFORM_TYPE:?}
            VUE_APP_OBS_FIELD_ID_LITTER=${DEV_OBS_FIELD_ID_LITTER:?}
            VUE_APP_OBS_FIELD_ID_ORCHID_TYPE=${DEV_OBS_FIELD_ID_ORCHID_TYPE:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH=${DEV_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_LENGTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH=${DEV_OBS_FIELD_ID_SEARCH_AREA_CALC_PRECISE_WIDTH:?}
            VUE_APP_OBS_FIELD_ID_SEARCH_EFFORT=${DEV_OBS_FIELD_ID_SEARCH_EFFORT:?}
            VUE_APP_OBS_FIELD_ID_SOIL_STRUCTURE=${DEV_OBS_FIELD_ID_SOIL_STRUCTURE:?}
            VUE_APP_OBS_FIELD_ID_WIDER_LANDUSE=${DEV_OBS_FIELD_ID_WIDER_LANDUSE:?}
            VUE_APP_GA_CODE=${DEV_GA_CODE:?}
            VUE_APP_DEPLOYED_ENV_NAME=development
            VUE_APP_GMAPS_API_KEY=${GMAPS_API_KEY:?}
            VUE_APP_SENTRY_DSN=${SENTRY_DSN:?}
            # optional items
            VUE_APP_BBOX_LAT_MIN=$DEV_BBOX_LAT_MIN
            VUE_APP_BBOX_LAT_MAX=$DEV_BBOX_LAT_MAX
            VUE_APP_BBOX_LON_MIN=$DEV_BBOX_LON_MIN
            VUE_APP_BBOX_LON_MAX=$DEV_BBOX_LON_MAX
            EOF
            # now some optional items
            [ ! -z $DEV_OBS_FIELD_DEFAULT_ACCURACY ] && {
              echo "VUE_APP_OBS_FIELD_DEFAULT_ACCURACY=$DEV_OBS_FIELD_DEFAULT_ACCURACY" >> $theFile
            }
            [ ! -z $DEV_OBS_FIELD_ORCHID_TYPE_EPIPHYTE ] && {
              echo "VUE_APP_OBS_FIELD_ORCHID_TYPE_EPIPHYTE=$DEV_OBS_FIELD_ORCHID_TYPE_EPIPHYTE" >> $theFile
            }
            echo "[INFO] contents of $theFile"
            cat $theFile
      - run:
          name: 'Build dev'
          command: |
            export VUE_APP_DEPLOYED_ENV_NAME=development
            ./scripts/build-and-sentry-release.sh
      - persist_to_workspace: # FIXME only need dist/ right?
          root: .
          paths: .

  deploy-prod:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Firebase deploy prod'
          command: |
            : ${FIREBASE_TOKEN:?}
            yarn firebase:deploy:ci prod

  deploy-beta:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Firebase deploy beta'
          command: |
            : ${FIREBASE_TOKEN:?}
            yarn firebase:deploy:ci beta

  deploy-dev:
    executor: default-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Firebase deploy dev'
          command: |
            : ${FIREBASE_TOKEN:?}
            yarn firebase:deploy:ci dev

workflows:
  version: 2
  build-and-deploy-prod:
    jobs:
      - install-dependencies:
          filters:
            branches:
              only: master # dependent jobs are controlled by this
      - check-prettier:
          requires:
            - install-dependencies
      - check-linter:
          requires:
            - install-dependencies
      - run-unit-tests:
          requires:
            - install-dependencies
      - run-e2e-tests:
          requires:
            - install-dependencies
      - build-prod:
          requires:
            - check-prettier
            - check-linter
            - run-unit-tests
            - run-e2e-tests
      - deploy-prod:
          requires:
            - build-prod

  build-and-deploy-beta:
    jobs:
      - install-dependencies:
          filters:
            branches:
              only: beta # dependent jobs are controlled by this
      - check-prettier:
          requires:
            - install-dependencies
      - check-linter:
          requires:
            - install-dependencies
      - run-unit-tests:
          requires:
            - install-dependencies
      - run-e2e-tests:
          requires:
            - install-dependencies
      - build-beta:
          requires:
            - check-prettier
            - check-linter
            - run-unit-tests
            - run-e2e-tests
      - deploy-beta:
          requires:
            - build-beta

  build-everything-and-deploy-dev:
    jobs:
      - install-dependencies:
          filters:
            branches:
              ignore: # dependent jobs are controlled by this
                - beta
                - master
      - check-prettier:
          requires:
            - install-dependencies
      - check-linter:
          requires:
            - install-dependencies
      - run-unit-tests:
          requires:
            - install-dependencies
      - run-e2e-tests:
          requires:
            - install-dependencies
      - build-dev:
          requires:
            - check-prettier
            - check-linter
            - run-unit-tests
            - run-e2e-tests
          filters:
            branches:
              only: develop # only build and deploy this branch
      - deploy-dev:
          requires:
            - build-dev
